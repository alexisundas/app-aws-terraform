name: Terraform CI CD Pipeline for Deploying AWS Resources
run-name: ${{ github.actor }} has triggered the pipeline

on:
  push:
      tags :
        - '*'
  workflow_dispatch :
    inputs :
      destroy :
        description : 'Set to true to trigger the terraform destroy job'
        required : false
        default : 'false'
      
env :
      TF_VAR_aws_access_key_id : ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_access_key : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_aws_session_token : ${{ secrets.AWS_SESSION_TOKEN }}
      TF_VAR_private_key_path : ${{ secrets.PRIVATE_KEY_PATH }}
      TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
      DOCKERHUB_USERNAME : ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN : ${{ secrets.DOCKERHUB_TOKEN }}
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
      
      - name: Generate Docker image tag
        id: docker_tag
        run: echo "tag=${{ github.ref_name }}" >> $GITHUB_ENV
      
      - name: Build Docker image
        run: docker build . -t ${{ secrets.DOCKERHUB_USERNAME }}/nginx-app:${{ env.tag }}
      
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/nginx-app:${{ env.tag }}
  
  deploy:
    if: github.event.inputs.destroy != 'true'
    runs-on: ubuntu-latest
    needs: build-and-push
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}
          aws configure set region ${{ secrets.AWS_REGION }}
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.0
          
      - name: Initialize Terraform
        run: terraform init
      - name : Plan Terraform
        run : terraform plan
      - name: Apply Terraform
        run: terraform apply -auto-approve
  
  destroy :
    if: github.event.inputs.destroy == 'false'
    runs-on: ubuntu-latest


    steps:
    - name : Checkout code
      uses : actions/checkout@v4
    
    -  name : Configure AWS CLI
       run : |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}
        aws configure set region ${{ secrets.AWS_REGION }}
    
    -
      name : Set up Terraform
      uses : hashicorp/setup-terraform@v3
      with :
        terraform_version : 1.0.0
    
    -
      name : Initialize Terraform
      run : terraform init
    -
      name : Plan Terraform
      run : terraform plan
    -
      name : Terraform Destroy
      run : terraform destroy -auto-approve

      